@using MauiApp1.Components.DB
@inject DBService db


<div class="my-grid-wrapper">
    <QuickGrid Items="tableHead" class="quickGrid">
        <Columns>
            <TemplateColumn Title="Tool">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("toolFormular")'>
                        @context.Tool
                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Operation">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("operationFormular")'>
                        @context.Operation
                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Classes">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("operationclassFormular")'>

                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Network">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("networkFormular")'>

                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Status">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("statusFormular")'>

                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </QuickGrid>

    <button id="addRow">
        +
    </button>
</div>



@code {

    [Parameter]
    public EventCallback<string> SetFormular { get; set; }

    [Parameter]
    public int CurrentStation { get; set; }

    private IQueryable<TableHead> tableHead;

    private record TableHead(string Tool, string Operation);

    protected override void OnInitialized()
    {
        if (CurrentStation != 0)
        {
            // Hier kannst du die Daten basierend auf der Station laden und Tupel in TableHead umwandeln
            var operations = db.GetOperationsFromStation(CurrentStation);

            // Umwandeln der Tupel in TableHead Objekte
            tableHead = operations.Select(op => new TableHead(op.operationDescription, op.toolID.ToString())).AsQueryable();

        }
    }




    private void CurrentFormular(string formular)
    {
        SetFormular.InvokeAsync(formular);
    }

}
