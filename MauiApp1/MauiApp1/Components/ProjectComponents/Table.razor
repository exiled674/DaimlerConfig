<div class="my-grid-wrapper">
    <QuickGrid Items="tableHead" class="quickGrid">
        <Columns>
            <TemplateColumn Title="Tool">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("toolFormular")'>
                        @context.Tool
                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Operation">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("operationFormular")'>
                        @context.Operation
                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Classes">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("operationclassFormular")'>
                        @context.Classes
                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Network">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("networkFormular")'>
                        @context.Network
                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Status">
                <CellTemplate>
                    <div @onclick='() => CurrentFormular("statusFormular")'>
                        @context.Status
                        <div class="status-circle"></div>
                    </div>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </QuickGrid>
</div>

@code {

    [Parameter]
    public EventCallback<string> SetFormular { get; set; }

    private IQueryable<TableHead> tableHead = new List<TableHead>
    {
        new("Tool1", "Operation1", "Class1", "Network1", "Status1"),
        new("Tool2", "Operation2", "Class2", "Network2", "Status2"),
        new("Tool3", "Operation3", "Class3", "Network3", "Status3"),
        new("Tool4", "Operation4", "Class4", "Network4", "Status4"),
        // … weitere Datensätze …
    }.AsQueryable();

    private record TableHead(string Tool, string Operation, string Classes, string Network, string Status);

    private void CurrentFormular(string formular)
    {
        SetFormular.InvokeAsync(formular);
    }

}
