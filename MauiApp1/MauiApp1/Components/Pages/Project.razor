@page "/"

<!-- Hier UI-Layout für Project-Bildschirm -->


<div class="lineName">
    <nav>
        <NavLink class="nav-link" href="">
            <input type="button" value="<" />
        </NavLink>
    </nav>
    <h1>Project: Area_B02_Main</h1>
</div>


<div class="screen">
    <div class="stations">

    </div>

    <div class="table_area">
        <QuickGrid Items="people">
            <Columns>
                <PropertyColumn Property="@(p => p.Id)"           Title="ID"               Sortable="true" />
                <PropertyColumn Property="@(p => p.Name)"         Title="Name"             Sortable="true" />
                <PropertyColumn Property="@(p => p.Geburtsdatum)" Title="Geburtsdatum"     Format="yyyy-MM-dd" Sortable="true" />
            </Columns>
        </QuickGrid>
        <ToolFormular></ToolFormular>
    </div>

</div>




@code {
      

    // Beispieldaten als IQueryable
    private IQueryable<Person> people = new List<Person>
    {
        new(1, "Max Mustermann", new DateOnly(1980, 5,  1)),
        new(2, "Erika Musterfrau", new DateOnly(1990, 3, 15)),
        new(3, "Hans Bauer", new DateOnly(1975, 8, 20)),
        new(4, "Max Mustermann", new DateOnly(1980, 5,  1)),
        new(5, "Erika Musterfrau", new DateOnly(1990, 3, 15)),
        new(6, "Hans Bauer", new DateOnly(1975, 8, 20)),
        new(7, "Max Mustermann", new DateOnly(1980, 5,  1)),
        new(8, "Erika Musterfrau", new DateOnly(1990, 3, 15)),
        new(9, "Hans Bauer", new DateOnly(1975, 8, 20)),
        // … weitere Datensätze …
    }.AsQueryable();

    // Einfache Record-Klasse
    private record Person(int Id, string Name, DateOnly Geburtsdatum);
}
