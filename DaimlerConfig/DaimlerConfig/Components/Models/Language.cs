namespace DConfig.Components.Models;

public class Language
{
    public static string ProjectManager { get; set; } = "Line Manager";
    public static string SearchProjects { get; set; } = "Search lines";
    public static string SortedByDateDesc { get; set; } = "Sorted by date descending";
    public static string SortedByNameAsc { get; set; } = "Sorted by name ascending";
    public static string SortedByFavorites { get; set; } = "Filter by favorites";
    public static string ModifiedOn { get; set; } = "Modified on";
    public static string By { get; set; } = "by";
    public static string CreateNewProject { get; set; } = "Create new line";
    public static string NewProject { get; set; } = "New line";
    public static string ProjectName { get; set; } = "Line Name";
    public static string Cancel { get; set; } = "Cancel";
    public static string Save { get; set; } = "Save";
    public static string AddToFavorites { get; set; } = "Add to favorites";
    public static string Edit { get; set; } = "Edit";
    public static string ExportToExcel { get; set; } = "Export to Excel";
    public static string ExportToJson { get; set; } = "Export to JSON";
    public static string EditProject { get; set; } = "Edit line";
    public static string DeleteProject { get; set; } = "Delete line";
    public static string Confirmation { get; set; } = "Confirmation";
    public static string DeleteProjectConfirm { get; set; } = "Do you really want to delete the line? This action cannot be undone.";
    public static string Delete { get; set; } = "Delete";
    public static string Settings { get; set; } = "Settings";
    public static string Profile { get; set; } = "Profile";
    public static string General { get; set; } = "General";
    public static string ConnectionSettings { get; set; } = "Connection settings";
    public static string UsernameSettings { get; set; } = "Username Settings";
    public static string Username { get; set; } = "Username";
    public static string DisplayNameInfo { get; set; } = "Your display name for the application";
    public static string Reset { get; set; } = "Reset";
    public static string GeneralSettings { get; set; } = "General Settings";
    public static string GeneralSettingsInfo { get; set; } = "General application settings will be available here.";
    public static string ReadOnlySettings { get; set; } ="Settings are in read-only mode. Click \"Edit Settings\" to make changes.";
    public static string ValidatingConnection { get; set; } = "Validating connection settings...";
    public static string InvalidDbSettings { get; set; } = "The new database settings are invalid.";
    public static string SaveSettings { get; set; } = "SAVE SETTINGS";
    public static string ResetChanges { get; set; } = "RESET CHANGES";
    public static string EditSettings { get; set; } = "EDIT SETTINGS";
    public static string DbConnectionConfig { get; set; } = "Database & Connection Configuration";
    public static string ReadOnly { get; set; } = "Read-Only";
    public static string DatabaseConnection { get; set; } = "Database Connection";
    public static string ServerIp { get; set; } = "Server IP";
    public static string ServerIpDesc { get; set; } = "Database server IP address";
    public static string Port { get; set; } = "Port";
    public static string PortDesc { get; set; } = "Database port number";
    public static string InitialCatalog { get; set; } = "Initial Catalog";
    public static string InitialCatalogDesc { get; set; } = "Database name";
    public static string UserId { get; set; } = "User ID";
    public static string UserIdDesc { get; set; } = "Database username";
    public static string Password { get; set; } = "Password";
    public static string PasswordDesc { get; set; } = "Database password";
    public static string Timeout { get; set; } = "Connection Timeout";
    public static string TimeoutDesc { get; set; } = "Timeout in seconds";
    public static string ConnectionOptions { get; set; } = "Connection Options";
    public static string PersistSecurityInfo { get; set; } = "Persist Security Info";
    public static string Mars { get; set; } = "Multiple Active Result Sets";
    public static string Encrypt { get; set; } = "Encrypt";
    public static string TrustCert { get; set; } = "Trust Server Certificate";
    public static string SignalrConfig { get; set; } = "SignalR Configuration";
    public static string SignalrHubUrl { get; set; } = "SignalR Hub URL";
    public static string SignalrHubDesc { get; set; } = "SignalR hub connection URL";
    public static string Stations { get; set; } = "Stations";
    public static string Station { get; set; } = "Station";
    public static string ToolsAndOperations { get; set; } = "Tools and Operations";
    public static string ChooseStation { get; set; } = "Please choose a station";
    public static string NoToolsFound { get; set; } = "No tools found.";
    public static string Tool { get; set; } = "Tool";
    public static string AssemblyStation { get; set; } = "Assembly Station";
    public static string AssemblyStationDesc { get; set; } = "Assembly station Description";
    public static string StationController { get; set; } = "Station Controller";
    public static string Comment { get; set; } = "Comment";
    public static string Create { get; set; } = "Create";
    public static string Status { get; set; } = "Status";
    public static string Update { get; set; } = "Update";
    public static string Versions { get; set; } = "Versions";
    public static string CurrentVersion { get; set; } = "Current Version";
    public static string ToolId { get; set; } = "Tool ID";
    public static string ToolShortname { get; set; } = "Tool Shortname";
    public static string ToolDescription { get; set; } = "Tool Description";
    public static string ToolClass { get; set; } = "Tool Class";
    public static string ToolType { get; set; } = "Tool Type";
    public static string Network { get; set; } = "Network";
    public static string IpAddressDevice { get; set; } = "IP Address Device";
    public static string PlcName { get; set; } = "PLC Name";
    public static string DbNoSend { get; set; } = "DBNo Send";
    public static string DbNoReceive { get; set; } = "DBNo Receive";
    public static string AddressSendDb { get; set; } = "Address in Send-DB";
    public static string AddressReceiveDb { get; set; } = "Address in Receive-DB";
    public static string BytePreCheck { get; set; } = "Byte Pre Check";
    public static string Operations { get; set; } = "Operations";
    public static string Copy { get; set; } = "Copy";
    public static string InsertOperation { get; set; } = "Insert Operation";
    public static string Operation { get; set; } = "Operation";
    public static string OperationId { get; set; } = "Operation ID";
    public static string OperationShortname { get; set; } = "Operation Shortname";
    public static string OperationDescription { get; set; } = "Operation Description";
    public static string ProcessingMode { get; set; } = "Processing Mode";
    public static string OperationSequence { get; set; } = "Operation Sequence";
    public static string OperationSequenceGroup { get; set; } = "Operation Sequence Group";
    public static string Classes { get; set; } = "Classes";
    public static string DecisionClass { get; set; } = "Decision Class";
    public static string GenerationClass { get; set; } = "Generation Class";
    public static string VerificationClass { get; set; } = "Verification Class";
    public static string SavingClass { get; set; } = "Saving Class";
    public static string DecisionCriteria { get; set; } = "Decision Criteria";
    public static string Confirm { get; set; } = "Confirm";
    public static string ProjectNameCannotBeEmpty { get; set; } = "Line name cannot be empty. Please enter a valid name.";
    public static string ProjectNameAlreadyExists { get; set; } = "Line already exists. Please choose a different name.";
    public static string ProjectErrorInDb { get; set; } = "Error updating line in database";
    public static string ErrorOccured { get; set; } = "An Error occured: ";
    public static string OperationShortnameMissing { get; set; } = "OperationShortname is missing";
    public static string OperationShortnameAlreadyExists { get; set; } = "An operation with this shortname already exists in this station";
    public static string UnchangedChanges { get; set; } = "You have unsaved changes. Do you want to save or discard them?";
    public static string Searching { get; set; } = "Searching...";
    public static string EnterUsername { get; set; } = "Enter your username";
    public static string UsernameHelperText { get; set; } = "Your display name for the application";
    public static string LanguageText { get; set; } = "Language";
    public static string LanguageSelect { get; set; } = "Select a language";
    public static string OpenLangFolder { get; set; } = "Open language folder";
    public static string LoadingSettings { get; set; } = "Loading settings...";
    public static string MissingDbInfo { get; set; } = "Please fill in all required database fields.";
    public static string MissingSignalRInfo { get; set; } = "SignalR Hub URL cannot be empty.";
    public static string SavedAppWillRestart { get; set; } = "Settings saved successfully. Application will restart...";
    public static string SaveError { get; set; } = "Error while saving settings: ";
    public static string LoadingError { get; set; } = "Error loading configuration: ";
    public static string StationType { get; set; } = "Station Type";
    public static string MissingStationData { get; set; } = "Station data is missing";
    public static string MissingAssemblyStation { get; set; } = "Assembly station is required\n";
    public static string StationAlreadyExists { get; set; } = "This station already exists in the line";
    public static string MissingToolShortname { get; set; } = "ToolShortname is missing";
    public static string ToolAlreadyExists { get; set; } = "A tool with this shortname already exists in this station";
    public static string MissingIpAddress { get; set; } = "IP Address is missing";
    public static string InvalidIp { get; set; } = "IP Address is not valid. Please use the format xxx.xxx.xxx.xxx";
    public static string UnknownUser { get; set; } = "Unknown user";
    public static string RemoveFromFavorites { get; set; } = "Remove from favorites";
    public static string NoLinesFound { get; set; } = "No lines found.";
    public static string InsertTool { get; set; } = "Insert Tool";
    public static string LineName { get; set; } = "Line name";
    public static string Parallel { get; set; } = "Parallel";
    public static string Serial { get; set; } = "Serial";
    public static string NoDescription { get; set; } = "No description";
    public static string ShareLink { get; set; } = "Share link";
    public static string NavigateTo { get; set; } = "Navigate to...";
    public static string HasBeenFavorized { get; set; } = " has been favorized";
    public static string HasBeenDefavored { get; set; } = " has been de-favored";
    public static string HasBeenDeleted { get; set; } = " has been deleted";
    public static string HasBeenCopied { get; set; } = " has been copied";
    public static string HasBeenUpdated { get; set; } = " has been updated";
    public static string HasBeenCreated { get; set; } = " has been created";
    public static string OperationHasBeenAdded { get; set; } = "Operation has been added";
    public static string ToolHasBeenAdded { get; set; } = "Tool has been added";
    public static string UrlCopied { get; set; } = "URL copied";
    public static string Project { get; set; } = "Line: ";
    public static string EditedByPart1 { get; set; } = "The tool is currently edited by: ";
    public static string EditedByPart2 { get; set; } = ". All files are read-only.";
    public static string Locked { get; set; } = "Locked";
    public static string ToolDeleteText1 { get; set; } = "Are you sure you want to delete this tool: ";
    public static string ToolDeleteText2 { get; set; } = "? This action cannot be undone.";
    public static string DeleteTool { get; set; } = "Delete tool: ";
    public static string OperationDeleteText1 { get; set; } = "Are you sure you want to delete this operation: ";
    public static string StationDeleteText1 { get; set; } = "Are you sure you want to delete this station: ";
    public static string DescriptionAndComments { get; set; } = "Description & Comments";
    public static string NetworkConfig { get; set; } = "Network Configuration";
    public static string OperationClasses { get; set; } = "Operation Classes";
    public static string ProjectDescription { get; set; } = "Linedescription";
    public static string Tools { get; set; } = "Tools";
    public static string AlwaysPerform { get; set; } = "Always perform";

    public static void SetLanguage(LanguageHelper newLang)
    {
        ProjectManager = newLang.ProjectManager;
        SearchProjects = newLang.SearchProjects;
        SortedByDateDesc = newLang.SortedByDateDesc;
        SortedByNameAsc = newLang.SortedByNameAsc;
        SortedByFavorites = newLang.SortedByFavorites;
        ModifiedOn = newLang.ModifiedOn;
        By = newLang.By;
        CreateNewProject = newLang.CreateNewProject;
        NewProject = newLang.NewProject;
        ProjectName = newLang.ProjectName;
        Cancel = newLang.Cancel;
        Save = newLang.Save;
        AddToFavorites = newLang.AddToFavorites;
        Edit = newLang.Edit;
        ExportToExcel = newLang.ExportToExcel;
        ExportToJson = newLang.ExportToJson;
        EditProject = newLang.EditProject;
        DeleteProject = newLang.DeleteProject;
        Confirmation = newLang.Confirmation;
        DeleteProjectConfirm = newLang.DeleteProjectConfirm;
        Delete = newLang.Delete;
        Settings = newLang.Settings;
        Profile = newLang.Profile;
        General = newLang.General;
        ConnectionSettings = newLang.ConnectionSettings;
        UsernameSettings = newLang.UsernameSettings;
        Username = newLang.Username;
        DisplayNameInfo = newLang.DisplayNameInfo;
        Reset = newLang.Reset;
        GeneralSettings = newLang.GeneralSettings;
        GeneralSettingsInfo = newLang.GeneralSettingsInfo;
        ReadOnlySettings = newLang.ReadOnlySettings;
        ValidatingConnection = newLang.ValidatingConnection;
        InvalidDbSettings = newLang.InvalidDbSettings;
        SaveSettings = newLang.SaveSettings;
        ResetChanges = newLang.ResetChanges;
        EditSettings = newLang.EditSettings;
        DbConnectionConfig = newLang.DbConnectionConfig;
        ReadOnly = newLang.ReadOnly;
        DatabaseConnection = newLang.DatabaseConnection;
        ServerIp = newLang.ServerIp;
        ServerIpDesc = newLang.ServerIpDesc;
        Port = newLang.Port;
        PortDesc = newLang.PortDesc;
        InitialCatalog = newLang.InitialCatalog;
        InitialCatalogDesc = newLang.InitialCatalogDesc;
        UserId = newLang.UserId;
        UserIdDesc = newLang.UserIdDesc;
        Password = newLang.Password;
        PasswordDesc = newLang.PasswordDesc;
        Timeout = newLang.Timeout;
        TimeoutDesc = newLang.TimeoutDesc;
        ConnectionOptions = newLang.ConnectionOptions;
        PersistSecurityInfo = newLang.PersistSecurityInfo;
        Mars = newLang.Mars;
        Encrypt = newLang.Encrypt;
        TrustCert = newLang.TrustCert;
        SignalrConfig = newLang.SignalrConfig;
        SignalrHubUrl = newLang.SignalrHubUrl;
        SignalrHubDesc = newLang.SignalrHubDesc;
        Stations = newLang.Stations;
        Station = newLang.Station;
        ToolsAndOperations = newLang.ToolsAndOperations;
        ChooseStation = newLang.ChooseStation;
        NoToolsFound = newLang.NoToolsFound;
        Tool = newLang.Tool;
        AssemblyStation = newLang.AssemblyStation;
        AssemblyStationDesc = newLang.AssemblyStationDesc;
        StationController = newLang.StationController;
        Comment = newLang.Comment;
        Create = newLang.Create;
        Status = newLang.Status;
        Update = newLang.Update;
        Versions = newLang.Versions;
        CurrentVersion = newLang.CurrentVersion;
        ToolId = newLang.ToolId;
        ToolShortname = newLang.ToolShortname;
        ToolDescription = newLang.ToolDescription;
        ToolClass = newLang.ToolClass;
        ToolType = newLang.ToolType;
        Network = newLang.Network;
        IpAddressDevice = newLang.IpAddressDevice;
        PlcName = newLang.PlcName;
        DbNoSend = newLang.DbNoSend;
        DbNoReceive = newLang.DbNoReceive;
        AddressSendDb = newLang.AddressSendDb;
        AddressReceiveDb = newLang.AddressReceiveDb;
        BytePreCheck = newLang.BytePreCheck;
        Operations = newLang.Operations;
        Copy = newLang.Copy;
        InsertOperation = newLang.InsertOperation;
        Operation = newLang.Operation;
        OperationId = newLang.OperationId;
        OperationShortname = newLang.OperationShortname;
        OperationDescription = newLang.OperationDescription;
        ProcessingMode = newLang.ProcessingMode;
        OperationSequence = newLang.OperationSequence;
        OperationSequenceGroup = newLang.OperationSequenceGroup;
        Classes = newLang.Classes;
        DecisionClass = newLang.DecisionClass;
        GenerationClass = newLang.GenerationClass;
        VerificationClass = newLang.VerificationClass;
        SavingClass = newLang.SavingClass;
        DecisionCriteria = newLang.DecisionCriteria;
        Confirm = newLang.Confirm;
        ProjectNameCannotBeEmpty = newLang.ProjectNameCannotBeEmpty;
        ProjectNameAlreadyExists = newLang.ProjectNameAlreadyExists;
        ProjectErrorInDb = newLang.ProjectErrorInDb;
        ErrorOccured = newLang.ErrorOccured;
        OperationShortnameMissing = newLang.OperationShortnameMissing;
        OperationShortnameAlreadyExists = newLang.OperationShortnameAlreadyExists;
        UnchangedChanges = newLang.UnchangedChanges;
        Searching = newLang.Searching;
        EnterUsername = newLang.EnterUsername;
        UsernameHelperText = newLang.UsernameHelperText;
        LanguageText = newLang.LanguageText;
        LanguageSelect = newLang.LanguageSelect;
        OpenLangFolder = newLang.OpenLangFolder;
        LoadingSettings = newLang.LoadingSettings;
        MissingDbInfo = newLang.MissingDbInfo;
        MissingSignalRInfo = newLang.MissingSignalRInfo;
        SavedAppWillRestart = newLang.SavedAppWillRestart;
        SaveError = newLang.SaveError;
        LoadingError = newLang.LoadingError;
        StationType = newLang.StationType;
        MissingStationData = newLang.MissingStationData;
        MissingAssemblyStation = newLang.MissingAssemblyStation;
        StationAlreadyExists = newLang.StationAlreadyExists;
        MissingToolShortname = newLang.MissingToolShortname;
        ToolAlreadyExists = newLang.ToolAlreadyExists;
        MissingIpAddress = newLang.MissingIpAddress;
        InvalidIp = newLang.InvalidIp;
        UnknownUser = newLang.UnknownUser;
        RemoveFromFavorites = newLang.RemoveFromFavorites;
        NoLinesFound = newLang.NoLinesFound;
        InsertTool = newLang.InsertTool;
        LineName = newLang.LineName;
        Parallel = newLang.Parallel;
        Serial = newLang.Serial;
        NoDescription = newLang.NoDescription;
        ShareLink = newLang.ShareLink;
        NavigateTo = newLang.NavigateTo;
        HasBeenFavorized = newLang.HasBeenFavorized;
        HasBeenDefavored = newLang.HasBeenDefavored;
        HasBeenDeleted = newLang.HasBeenDeleted;
        HasBeenCopied = newLang.HasBeenCopied;
        HasBeenUpdated = newLang.HasBeenUpdated;
        HasBeenCreated = newLang.HasBeenCreated;
        OperationHasBeenAdded = newLang.OperationHasBeenAdded;
        ToolHasBeenAdded = newLang.ToolHasBeenAdded;
        UrlCopied = newLang.UrlCopied;
        Project = newLang.Project;
        EditedByPart1 = newLang.EditedByPart1;
        EditedByPart2 = newLang.EditedByPart2;
        Locked = newLang.Locked;
        ToolDeleteText1 = newLang.ToolDeleteText1;
        ToolDeleteText2 = newLang.ToolDeleteText2;
        DeleteTool = newLang.DeleteTool;
        OperationDeleteText1 = newLang.OperationDeleteText1;
        StationDeleteText1 = newLang.StationDeleteText1;
        DescriptionAndComments = newLang.DescriptionAndComments;
        NetworkConfig = newLang.NetworkConfig;
        OperationClasses = newLang.OperationClasses;
        ProjectDescription = newLang.ProjectDescription;
        Tools = newLang.Tools;
        AlwaysPerform = newLang.AlwaysPerform;
    }
}