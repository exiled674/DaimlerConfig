namespace DaimlerConfig.Components.Models;

public class Language
{
    public string ProjectManager { get; set; } = "Project Manager";
    public string SearchProjects { get; set; } = "Search projects";
    public string SortedByDateDesc { get; set; } = "Sorted by date descending";
    public string SortedByNameAsc { get; set; } = "Sorted by name ascending";
    public string SortedByFavorites { get; set; } = "Sorted by Favorites";
    public string ModifiedOn { get; set; } = "Modified on";
    public string By { get; set; } = "by";
    public string CreateNewProject { get; set; } = "Create new project";
    public string NewProject { get; set; } = "New project";
    public string ProjectName { get; set; } = "Project Name";
    public string Cancel { get; set; } = "Cancel";
    public string Save { get; set; } = "Save";
    public string AddToFavorites { get; set; } = "Add to favorites";
    public string Edit { get; set; } = "Edit";
    public string ExportToExcel { get; set; } = "Export to Excel";
    public string ExportToJson { get; set; } = "Export to JSON";
    public string EditProject { get; set; } = "Edit Project";
    public string DeleteProject { get; set; } = "Delete Project";
    public string Confirmation { get; set; } = "Confirmation";
    public string DeleteProjectConfirm { get; set; } = "Do you really want to delete the project? This action cannot be undone.";
    public string Delete { get; set; } = "Delete";
    public string Settings { get; set; } = "Settings";
    public string Profile { get; set; } = "Profile";
    public string General { get; set; } = "General";
    public string ConnectionSettings { get; set; } = "Connection settings";
    public string UsernameSettings { get; set; } = "Username Settings";
    public string Username { get; set; } = "Username";
    public string DisplayNameInfo { get; set; } = "Your display name for the application";
    public string Reset { get; set; } = "Reset";
    public string GeneralSettings { get; set; } = "General Settings";
    public string GeneralSettingsInfo { get; set; } = "General application settings will be available here.";
    public string ReadOnlySettings { get; set; } = "Settings are in read-only mode. Click \"Edit Settings\" to make changes.";
    public string ValidatingConnection { get; set; } = "Validating connection settings...";
    public string InvalidDbSettings { get; set; } = "The new database settings are invalid.";
    public string SaveSettings { get; set; } = "SAVE SETTINGS";
    public string ResetChanges { get; set; } = "RESET CHANGES";
    public string EditSettings { get; set; } = "EDIT SETTINGS";
    public string DbConnectionConfig { get; set; } = "Database & Connection Configuration";
    public string ReadOnly { get; set; } = "Read-Only";
    public string DatabaseConnection { get; set; } = "Database Connection";
    public string ServerIp { get; set; } = "Server IP";
    public string ServerIpDesc { get; set; } = "Database server IP address";
    public string Port { get; set; } = "Port";
    public string PortDesc { get; set; } = "Database port number";
    public string InitialCatalog { get; set; } = "Initial Catalog";
    public string InitialCatalogDesc { get; set; } = "Database name";
    public string UserId { get; set; } = "User ID";
    public string UserIdDesc { get; set; } = "Database username";
    public string Password { get; set; } = "Password";
    public string PasswordDesc { get; set; } = "Database password";
    public string Timeout { get; set; } = "Connection Timeout";
    public string TimeoutDesc { get; set; } = "Timeout in seconds";
    public string ConnectionOptions { get; set; } = "Connection Options";
    public string PersistSecurityInfo { get; set; } = "Persist Security Info";
    public string Mars { get; set; } = "Multiple Active Result Sets";
    public string Encrypt { get; set; } = "Encrypt";
    public string TrustCert { get; set; } = "Trust Server Certificate";
    public string SignalrConfig { get; set; } = "SignalR Configuration";
    public string SignalrHubUrl { get; set; } = "SignalR Hub URL";
    public string SignalrHubDesc { get; set; } = "SignalR hub connection URL";
    public string Stations { get; set; } = "Stations";
    public string Station { get; set; } = "Station";
    public string ToolsAndOperations { get; set; } = "Tools and Operations";
    public string ChooseStation { get; set; } = "Please choose a station";
    public string NoToolsFound { get; set; } = "No tools found.";
    public string Tool { get; set; } = "Tool";
    public string AssemblyStation { get; set; } = "Assembly Station";
    public string AssemblyStationDesc { get; set; } = "Assembly station Description";
    public string StationController { get; set; } = "Station Controller";
    public string Comment { get; set; } = "Comment";
    public string Create { get; set; } = "Create";
    public string Status { get; set; } = "Status";
    public string Update { get; set; } = "Update";
    public string Versions { get; set; } = "Versions";
    public string CurrentVersion { get; set; } = "Current Version";
    public string ToolId { get; set; } = "Tool ID";
    public string ToolShortname { get; set; } = "Tool Shortname";
    public string ToolDescription { get; set; } = "Tool Description";
    public string ToolClass { get; set; } = "Tool Class";
    public string ToolType { get; set; } = "Tool Type";
    public string Network { get; set; } = "Network";
    public string IpAddressDevice { get; set; } = "IP Address Device";
    public string PlcName { get; set; } = "PLC Name";
    public string DbNoSend { get; set; } = "DBNo Send";
    public string DbNoReceive { get; set; } = "DBNo Receive";
    public string AddressSendDb { get; set; } = "Address in Send-DB";
    public string AddressReceiveDb { get; set; } = "Address in Receive-DB";
    public string BytePreCheck { get; set; } = "Byte Pre Check";
    public string Operations { get; set; } = "Operations";
    public string Copy { get; set; } = "Copy";
    public string InsertOperation { get; set; } = "Insert Operation";
    public string Operation { get; set; } = "Operation";
    public string OperationId { get; set; } = "Operation ID";
    public string OperationShortname { get; set; } = "Operation Shortname";
    public string OperationDescription { get; set; } = "Operation Description";
    public string ProcessingMode { get; set; } = "Processing Mode";
    public string OperationSequence { get; set; } = "Operation Sequence";
    public string OperationSequenceGroup { get; set; } = "Operation Sequence Group";
    public string Classes { get; set; } = "Classes";
    public string DecisionClass { get; set; } = "Decision Class";
    public string GenerationClass { get; set; } = "Generation Class";
    public string VerificationClass { get; set; } = "Verification Class";
    public string SavingClass { get; set; } = "Saving Class";
    public string DecisionCriteria { get; set; } = "Decision Criteria";
    public string Confirm { get; set; } = "Confirm";
    public string ProjectNameCannotBeEmpty { get; set; } = "Project name cannot be empty. Please enter a valid name.";
    public string ProjectNameAlreadyExists { get; set; } = "Project already exists. Please choose a different name.";
    public string ProjectErrorInDb { get; set; } = "Error updating project in database";
    public string ErrorOccured { get; set; } = "An Error occured: ";
    public string OperationShortnameMissing { get; set; } = "OperationShortname is missing";
    public string OperationShortnameAlreadyExists { get; set; } = "An operation with this shortname already exists in this station";
    public string UnchangedChanges { get; set; } = "Du hast ungespeicherte Änderungen. Möchtest du speichern oder verwerfen?";
    public string Searching { get; set; } = "Searching...";
    public string EnterUsername { get; set; } = "Enter your username";
    public string UsernameHelperText { get; set; } = "Your display name for the application";
    public string LanguageText { get; set; } = "Language";
    public string LanguageSelect { get; set; } = "Select a language";
    public string OpenLangFolder { get; set; } = "Open language folder";
    public string LoadingSettings { get; set; } = "Loading settings...";
    public string MissingDbInfo { get; set; } = "Please fill in all required database fields.";
    public string MissingSignalRInfo { get; set; } = "SignalR Hub URL cannot be empty.";
    public string SavedAppWillRestart { get; set; } = "Settings saved successfully. Application will restart...";
    public string SaveError { get; set; } = "Error while saving settings: ";
    public string LoadingError { get; set; } = "Error loading configuration: ";
    public string StationType { get; set; } = "Station Type";
    public string MissingStationData { get; set; } = "Station data is missing";
    public string MissingAssemblyStation { get; set; } = "`Assembly station is required`\n";
    public string StationAlreadyExists { get; set; } = "This station already exists in the line";
    public string MissingToolShortname { get; set; } = "ToolShortname is missing";
    public string ToolAlreadyExists { get; set; } = "A tool with this shortname already exists in this station";
    public string MissingIpAddress { get; set; } = "IP Address is missing";
    public string InvalidIp { get; set; } = "IP Address is not valid. Please use the format xxx.xxx.xxx.xxx";
    public string UnknownUser { get; set; } = "Unknown user";
    public string RemoveFromFavorites { get; set; } = "Remove from favorites";
    public string NoLinesFound { get; set; } = "No lines found.";
    public string InsertTool { get; set; } = "Insert Tool";
    public string LineName { get; set; } = "Line name";
}
