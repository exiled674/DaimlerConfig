@page "/"
@using DaimlerConfig.Components.JsonHandler
@using DaimlerConfig.Components.Models
@inject Repositories.IRepository<Models.Station> StationRepo
@inject Repositories.IRepository<Models.Tool> ToolRepo
@inject Repositories.IRepository<Models.Operation> OperationRepo

<h3>Station Details (ID = 6)</h3>

@if (_station is null)
{
    <p>Keine Stations vorhanden.</p>
}
else
{
    <div>
        <p><strong>Assemblystation:</strong> @_station.assemblystation</p>
        <p><strong>Station Name:</strong> @_station.stationName</p>
        <p><strong>StationType ID:</strong> @_station.StationType_stationTypeID</p>
        <p><strong>Last Modified:</strong> @_station.lastModified</p>
    </div>
}

<h3>Alle Stationen (nach lastModified sortiert)</h3>

@if (_sortedStations is null)
{
    <p>Lade Stationen...</p>
}
else if (!_sortedStations.Any())
{
    <p>Keine Stationen gefunden.</p>
}
else
{
    <ul>
        @foreach (var s in _sortedStations)
        {
            <li>
                <strong>@s.stationName</strong> – @s.lastModified
            </li>
        }
    </ul>
}

@code {
    
    private Station? _station;
    
    private IEnumerable<Station>? _sortedStations;
    private List<Station>? _stationsList;
    private IEnumerable<Tool>? _sortedTools;
    private List<Tool>? _toolsList;
    private IEnumerable<Operation>? _sortedOperations;
    private List<Operation>? _operationList;
    
    private readonly WriteJson _writeJson = new WriteJson();
    
    
    protected override async Task OnInitializedAsync()
    {
        _station = await StationRepo.Get(6);
        
        _sortedStations = await StationRepo.GetAllOrderedByDate();
        _stationsList = _sortedStations.ToList();
        _sortedTools = await ToolRepo.GetAllOrderedByDate();
        _toolsList = _sortedTools.ToList();
        _sortedOperations = await OperationRepo.GetAllOrderedByDate();
        _operationList = _sortedOperations.ToList();

        await _writeJson.WriteAllToFileAsync(_stationsList, _toolsList, _operationList,"C:\\Users\\jn\\Desktop\\export.json");
    }
}
