@page "/"
@using DaimlerConfig.Components.Models
@using DaimlerConfig.Components.Repositories
@inject IRepository<Station> StationRepo

<h3>Station Details (ID = 6)</h3>
@if (station == null)
{
    <p>Lade Station...</p>
}
else
{
    <div>
        <p><strong>Assemblystation:</strong> @station.assemblystation</p>
        <p><strong>Station Name:</strong> @station.stationName</p>
        <p><strong>StationType ID:</strong> @station.StationType_stationTypeID</p>
        <p><strong>Last Modified:</strong> @station.lastModified</p>
    </div>
}

<h3>Stationen mit Name "Eingan2"</h3>
@if (eingan2Stations == null)
{
    <p>Lade Stationen...</p>
}
else if (!eingan2Stations.Any())
{
    <p>Keine Stationen mit diesem Namen gefunden.</p>
}
else
{
    <ul>
        @foreach (var s in eingan2Stations)
        {
            <li>
                <strong>@s.stationName</strong> (Assembly: @s.assemblystation) - Geändert am @s.lastModified
            </li>
        }
    </ul>
}

@code {
    private Station station;
    private IEnumerable<Station> eingan2Stations;

    protected override async Task OnInitializedAsync()
    {
        station = await StationRepo.Get(6);
        eingan2Stations = await StationRepo.Find(s => s.stationName == "Eingan2");
    }
}
