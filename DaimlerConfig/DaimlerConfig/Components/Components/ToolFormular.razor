@using DaimlerConfig.Components.Models
@inject DaimlerConfig.Components.Fassade.Fassade Fassade

<div>
    <div class="class-header  justify-content-between align-items-center">
        <h2>Tool</h2>
        @if (SelectedTool?.toolID == 0)
        {
            <div class="d-flex justify-content-end align-items-center mb-3">
                <button class="btn btn-primary btn-sm" @onclick="CreateToolAsync">Create</button>
            </div>
            @if (!string.IsNullOrEmpty(ValidationMessage))
            {
                <div class="text-danger">@ValidationMessage</div>
            }
        }

        @if (SelectedTool?.toolID != 0)
        {
            <div class="d-flex justify-content-end align-items-center mb-3">
                <button class="btn btn-primary btn-sm">Delete</button>
            </div>
            @if (!string.IsNullOrEmpty(ValidationMessage))
            {
                <div class="text-danger">@ValidationMessage</div>
            }
        }
    </div>
    <div class="layout position-relative">
        <div class="toolColoumnLeft">

            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="" @bind="SelectedTool.toolID" readonly @onblur="UpdateToolAsync">
                <label>Tool ID</label>
            </div>

            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" maxlength="16" placeholder="" @bind="SelectedTool.toolShortname" @onblur="UpdateToolAsync">
                <label>Tool Shortname</label>
                <datalist id="datalistOptions">

                    <option value="San Francisco"></option>
                    <option value="New York"></option>
                    <option value="Seattle"></option>
                    <option value="Los Angeles"></option>
                    <option value="Chicago"></option>
                </datalist>
            </div>

            <div class="form-floating mb-3">
                <textarea type="text" class="form-control form-control" placeholder="" style="height: 100px" @bind="SelectedTool.toolDescription" @onblur="UpdateToolAsync"></textarea>
                <label>Tool Description</label>
                <span class="position-absolute end-0 bottom-0 me-2 mb-1 text-muted small">
                    @($"{SelectedTool?.toolDescription?.Length ?? 0}/100")
                </span>
            </div>


        </div>

        <div class="toolColoumnRight ">


            <div class="form-floating mb-3">
                <select class="form-select form-select" id="ToolClass">
                    <option value="">select...</option>
                    <option value="Class1">needs</option>
                    <option value="Class2">binding</option>
                </select>
                <label for="ToolClass">Tool Class</label>
            </div>

            <div class="form-floating mb-3">
                <select class="form-select form-select" id="ToolType">
                    <option value="">select...</option>
                    <option value="Class1">needs</option>
                    <option value="Class2">binding</option>
                </select>
                <label for="ToolType">Tool Type</label>
            </div>
         </div>

        </div>
    <hr />
    <div>
        <h2>Network</h2>
        <div class="layout position-relative">
            <div class="toolColoumnLeft">
            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>IP-Address Device</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>PLC Name</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>DBNo Send</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>DBNo Receive</label>
            </div>
            </div>

            <div class="toolColoumnRight">
            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>Address in Send-DB</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>Address in Receive-DB</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>Byte Pre Check</label>
            </div>
                

            </div>

        </div>
    </div>
</div>

@code {
    [Parameter]
    public Tool? SelectedTool { get; set; }

    [Parameter]
    public EventCallback OnUpdated { get; set; }

    private string? ValidationMessage;

    private async Task UpdateToolAsync()
    {
        if (SelectedTool != null && SelectedTool.toolID != 0)
        {
            await Fassade.UpdateTool(SelectedTool);
            await OnUpdated.InvokeAsync();
        }
    }

    private async Task CreateToolAsync()
    {
        ValidationMessage = null;

        if (SelectedTool == null)
        {
            ValidationMessage = "Tool-Daten fehlen.";
            return;
        }

        if (string.IsNullOrWhiteSpace(SelectedTool.toolShortname))
        {
            ValidationMessage = "Tool Shortname darf nicht leer sein.";
            return;
        }

        bool exists = await Fassade.ToolExistsByName(SelectedTool.toolShortname);
        if (exists)
        {
            ValidationMessage = "Tool Shortname ist bereits vergeben.";
            return;
        }

        await Fassade.AddTool(SelectedTool);
        await OnUpdated.InvokeAsync();
    }
}
