@using DaimlerConfig.Components.Models
@inject DaimlerConfig.Components.Fassade.Fassade Fassade

@using DaimlerConfig.Services
@inject SignalRService SignalRService

<div>
    <h2>Operation</h2>
    <div class="layout">
        <div class="toolColoumn">
            <label>Operation ID:</label>
            <input class="input-field" type="text" @bind="SelectedOperation.operationID" readonly  />

            <label>Operation Shortname:</label>
            <input class="input-field" type="text" @bind="SelectedOperation.operationShortname"  />

            <label>Operation Description:</label>
            <input class="input-field" type="text" @bind="SelectedOperation.operationDescription"  />
        </div>

        <div class="toolColoumnRight ">

           
            <div class="form-floating mb-3">
                <select class="form-select form-select" id="ProcessingMode">
                    <option value="">select...</option>
                    <option value="Serial">Serial</option>
                    <option value="Parallel">Parallel</option>
                </select>
                <label for="ProcessingMode">Processing Mode</label>
            </div>

            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>Operation Sequenz</label>
            </div>

            <div class="form-floating mb-3">
                <input type="text" class="form-control form-control" placeholder="">
                <label>Operation Sequenz Group</label>
            </div>

        </div>

         

        
    </div>
    <hr />
    <div >
        <h2>Classes</h2>
        <div class="layout position-relative">
            <div class="toolColoumnLeft">
                <div class="form-floating mb-3">
                    <select class="form-select form-select" id="DecisionClass">
                        <option value="">select...</option>
                        <option value="Class1">needs</option>
                        <option value="Class2">binding</option>
                    </select>
                    <label for="DecisionClass">Decision Class</label>
                </div>

                <div class="form-floating mb-3">
                    <select class="form-select form-select" id="GenerationClass">
                        <option value="">select...</option>
                        <option value="Class1">needs</option>
                        <option value="Class2">binding</option>
                    </select>
                    <label for="GenerationClass">Generation Class</label>
                </div>


                <div class="form-floating mb-3">
                    <select class="form-select form-select" id="VerificationClass">
                        <option value="">select...</option>
                        <option value="Class1">needs</option>
                        <option value="Class2">binding</option>
                    </select>
                    <label for="VerificationClass">Verification Class</label>
                </div>

                <div class="form-floating mb-3">
                    <select class="form-select form-select" id="SavingClass">
                        <option value="">select...</option>
                        <option value="Class1">needs</option>
                        <option value="Class2">binding</option>
                    </select>
                    <label for="SavingClass">Saving Class</label>
                </div>
            </div>

            <div class="toolColoumnRight">

                <div class="form-floating">
                    <textarea class="form-control form-control" maxlength="100" placeholder="" id="DecisionCriteria" style="height: 150px"></textarea>
                    <label for="DecisionCriteria">Decision Criteria</label>
                </div>
            </div>            

            @if (SelectedOperation.operationID == 0)
            {
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <button class="btn btn-success btn-sm" @onclick="AddOperationAsync">Create</button>
                </div>
            }

            @if (SelectedOperation.operationID != 0)
            {
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <button class="btn btn-success btn-sm" @onclick="UpdateOperationAsync">Update</button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Operation? SelectedOperation { get; set; }

    [Parameter]
    public EventCallback OnUpdated { get; set; }


    #region CRUD
    private async Task UpdateOperationAsync()
    {
        if (await ValidateData() == false)
            return;

        await Fassade.UpdateOperation(SelectedOperation);
        await OnUpdated.InvokeAsync();
        await SignalRService.SendMessageToServer("OperationChanged");

    }

    private async Task AddOperationAsync()
    {
        if (await ValidateData() == false)
            return;

        await Fassade.AddOperation(SelectedOperation);
        await OnUpdated.InvokeAsync();
        await SignalRService.SendMessageToServer("OperationChanged");
    }
    #endregion

    #region Validate
    private async Task<bool> ValidateData()
    {
        //Objekt
        if (SelectedOperation == null)
            return false;

        //OperationShortname
        if (string.IsNullOrWhiteSpace(SelectedOperation.operationShortname))
            return false;

        if (SelectedOperation.operationShortname.Length > 16)
            return false;

        if (!SelectedOperation.toolID.HasValue)
            return false;

        if (await Fassade.OperationExistsInTool(SelectedOperation.operationShortname, SelectedOperation.toolID.Value))
            return false;

        //OperationDescription
        if (SelectedOperation.operationDescription != null)
        {
            if (SelectedOperation.operationDescription.Length > 100)
                return false;
        }
       

        return true;
    }

    #endregion
}
