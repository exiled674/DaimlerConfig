@using DaimlerConfig.Services
@inject DirtyManagerService DirtyManagerService

@if (isVisible)
{
    <div class="popup-backdrop">
        <div class="popup-dialog">
            <p>Du hast ungespeicherte Änderungen. Möchtest du speichern oder verwerfen?</p>
            <button class="btn btn-primary" @onclick="SaveChanges">Speichern</button>
            <button class="btn btn-secondary" @onclick="DismissChanges">Verwerfen</button>
        </div>
    </div>
}

@code {

    private bool isVisible;

    protected override async Task OnInitializedAsync()
    {
        isVisible = await DirtyManagerService.IsDirty();
    }

    private async Task SaveChanges()
    {
        /*await DirtyManagerService.SaveAsync(); // Methode musst du im Service selbst implementieren
        isVisible = false;
        StateHasChanged();
        // Optional: Navigation hier auslösen (wenn unbedingt nötig)*/
    }

    private void DismissChanges()
    {
        /*DirtyManagerService.Discard(); // Auch diese Methode musst du im Service bauen
        isVisible = false;
        StateHasChanged();
        // Optional: Navigation hier auslösen*/
    }
}

